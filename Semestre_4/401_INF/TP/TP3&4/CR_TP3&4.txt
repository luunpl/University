3.1.L'affichage de la commande arm-eabi-objdump -j .data -s donnees.o montre le contenu de la section .data du fichier objet donnees.o. Analysons les informations fournies :

Base des Informations
Les adresses et les octets sont affichés en hexadécimal (base 16).

Nombre d'Octets par Ligne
Chaque ligne représente 16 octets.

Correspondance avec les Valeurs Déclarées
La section .data contient les octets suivants :
0000  41 0f 62 6f 6e 6a 6f 75 72 00 42 03 11 22 34 56
0010  fa fd 41
Décomposons ces octets :

Adresse 0000 :

41 0f 62 6f 6e 6a 6f 75 72 00 42 03 11 22 34 56
Caractères correspondants : A.bonjour.B.."4V
Adresse 0010 :

fa fd 41
Caractères correspondants : ..A
Correspondance avec les Valeurs Déclarées
Supposons que la section .data a été initialisée avec les valeurs suivantes :

char str[] = "bonjour";
int num1 = 0x0342;
int num2 = 0x56342211;
char end = 0xfa;
char end2 = 0xfd;
char end3 = 'A';

41 correspond à A.
0f est un caractère non imprimable.
62 6f 6e 6a 6f 75 72 correspond à la chaîne de caractères "bonjour".
00 est le terminateur nul pour la chaîne.
42 03 correspond à l'entier 0x0342.
11 22 34 56 correspond à l'entier 0x56342211.
fa correspond au caractère 0xfa.
fd correspond au caractère 0x

Contents of section .data:
 0000 00000041 0000000f 626f6e6a 6f757200  ...A....bonjour.
 0010 00000042 00000003 11223456 fafd0000  ...B...."4V....
 0020 00000041                             ...A

Explication
0x00000041 : 65 en 32 bits
0x0000000f : 15 en 32 bits
0x626f6e6a 6f757200 : "bonjour" en ASCII
0x00000042 : 66 en 32 bits
0x00000003 : 3 en 32 bits
0x11223456 : 0x1122 et 0x3456 combinés en 32 bits
0xfafd0000 : 0xfafd en 32 bits (les deux octets de poids faible sont 0x00)
0x00000041 : 65 en 32 bits
En suivant ces étapes, vous pouvez modifier, 
compiler et inspecter le fichier donnees2.s pour voir la représentation 
des entiers sur 32 bits dans la section .data.

3.2.1 Lecture d’un mot de 32 bits
Adresse : 0x0001f460

Cela pourrait être l'adresse mémoire où une certaine donnée est stockée.
Valeur : 0x0000010a

Cela pourrait être la valeur de la donnée stockée à l'adresse 0x0001f460.

3.2.2 Lecture de mots de tailles differentes
Valeurs et Adresses Mémoire
Valeur 266 :

Valeur : 2097144
Adresse mémoire : 128132
Valeur 42 :

Valeur : 62596
Adresse mémoire : 128136
Valeur 12 :

Valeur : 136
Adresse mémoire : 128138

3.2.3 Ecriture en memoire
Valeurs et Adresses Mémoire
Valeur initiale à l'adresse DW :

Valeur : 00000000 (hexadécimal)
Valeur : 0 (décimal)
Nouvelle valeur à l'adresse DW :

Valeur : fffffff6 (hexadécimal)
Valeur : -10 (décimal)
Valeur initiale à l'adresse DH :

Valeur : 00000000 (hexadécimal)
Valeur : 0 (décimal)
Nouvelle valeur à l'adresse DH :

Valeur : 0000002a (hexadécimal)
Valeur : 42 (décimal)
Valeur initiale à l'adresse DB :

Valeur : 00000000 (hexadécimal)
Valeur : 0 (décimal)
Nouvelle valeur à l'adresse DB :

Valeur : 0000000c (hexadécimal)
Valeur : 12 (décimal)

4.1 Un premier programme en langage d’assemblag
4.2 Alignements et ”petits bouts”
On ne peut pas afficher l,entier a