help(mtcars)
mtcars
names(mtcars)
head(mtcars)
mtcars$cyl
mtcars$disp
mtcars$cyl
mtcars$am
mtcars$mpg
mtcars$disp
help(summary)
max(disp)
max(disp)
#-------------Exercice 1-------------------------------------
help(mtcars)
mtcars
names(mtcars)
head(mtcars)
mtcars$cyl
mtcars$am
mtcars$mpg
disp <- mtcars$disp
# Qualiquative : vs, am
# Quantitative : disp, wt
help(summary)
max(disp)
summary(disp)
boxplot(mpg)
mtcars$mpg->mpg
boxplot(mpg)
#-------------Exercice 1-------------------------------------
help(mtcars)
mtcars
names(mtcars)
head(mtcars)
mtcars$cyl
mtcars$am
mtcars$mpg
disp <- mtcars$disp
# Qualiquative : vs, am
# Quantitative : disp, wt
help(summary) # Summary va donner min max mean median ...
max(disp)
summary(disp)
#-------------Exercice 2-------------------------------------
mtcars$mpg->mpg
boxplot(mpg)
boxplot(disp)
#-------------Exercice 1-------------------------------------
help(mtcars)
mtcars
names(mtcars)
head(mtcars)
cyl <- mtcars$cyl
am <- mtcars$am
mtcars$mpg
disp <- mtcars$disp
# Qualiquative : vs, am
# Quantitative : disp, wt
help(summary) # Summary va donner min max mean median ...
max(disp)
summary(disp)
#-------------Exercice 2-------------------------------------
mtcars$mpg->mpg
boxplot(mpg)
boxplot(disp)
boxplot(am)
boxplot(cyl)
boxplot(am)
boxplot(disp)
boxplot(mpg)
boxplot(am)
mtcars[am==0,"mpg"]->mpga
mpga
mtcars[am==0,"mpg"]->mpga
mpga
mtcars[am==1,"mpg"]->mpgm
mpgm
boxplot(mpga,mpgm,names=c("automatique","manuelle")
boxplot(mpga,mpgm,names=c("automatique","manuelle"),main="mpg selon la transmission")
boxplot(mpga,mpgm,names=c("automatique","manuelle"),main="mpg selon la transmission" )
boxplot(mpga,mpgm,names=c("automatique","manuelle"),main="mpg selon la transmission")
if (!requireNamespace("devtools"))
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
install.packages('rmarkdown')
install.packages('tinytex')
tinytex::install_tinytex()  # install TinyTeX
rm -rf /home/luunpl/R/x86_64-pc-linux-gnu-library/4.3/00LOCK-sass
install.packages("sass")
install.packages("bslib")
install.packages("rmarkdown")
## Including Plots
You can also embed plots, for example:
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
pwd
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
```{r setup, include=FALSE}
setwd("~/Personal/University/Semestre_4/401_STA/TP/TP")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```{r pressure, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE, out.width="50%")
```{r setup, include=FALSE}
summary(cars)
read.csv("cardiaque.csv")->cardiaque
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.csv("cardiaque.csv")->cardiaque
read.csv("cardiaque.csv")->cardiaque
pwd
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.csv("cardiaque.csv")->cardiaque
read.table("cardiaque.csv",header=T,sep=",",dec=".")->card
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
setwd("~/Personal/University/Semestre_4/401_STA/TP")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
```{r setup, include=FALSE}
boxplot montre : min, max, quartiles et médiane.
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
head(cardiaque)
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
head(cardiaque)
dnorm(x,mean=0,sd=1)
help(curve)
curve(dnorm)
help(curve)
dnorm(x,0, 1)
help(dnorme)
curve(dnorm(x,0, 1))
help(dnorm)
curve(dnorm(x,0, 1))
help(dnorm)
dnorm(x,0, 1)
help(curve)
curve(dnorm(x,0, 1),from=-6, to=6)
curve(dnorm(x,0, 0.5),from=-6, to=6)
help(curve)
curve(dnorm(x,0,1),from=-6, to=6)
curve(dnorm(x,0,0.5),from=-6, to=6)
curve(dnorm(x,0,2),from=-6, to=6)
curve(dnorm(x,3,1),from=-6, to=6)
View(cardiaque)
setwd("~/Personal/University/Semestre_4/401_STA/TP/Donnees")
read.table("cardiaque.csv",header=T,sep=",",dec=".")->cardiaque
head(cardiaque)
summary(cardiaque)
curve(dnorm(x,0,1),from=-6, to=6)
curve(dnorm(x,0,0.5),from=-6, to=6)
curve(dnorm(x,0,2),from=-6, to=6)
curve(dnorm(x,3,1),from=-6, to=6)
curve(dnorm(x,0,1),from=-6, to=6,n=1000,col=1)
curve(dnorm(x,0,0.5),from=-6, to=6)
curve(dnorm(x,0,2),from=-6, to=6)
curve(dnorm(x,3,1),from=-6, to=6)
curve(dnorm(x,0,1),from=-6,to=6,n=1000,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
segment(0, 1)
segments(0,1)
segments(0,1,0,-1)
segments(-1,0,1,0)
segments(-1,0,1,0)
abline(h=0,v=0)
abline(v=c(-1,1),col=2,lty=2)
plot.new()
abline(h=0,v=0)
curve(dnorm(x,0,1),from=-6,to=6,n=1000,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
curve(dnorm(x,0,1),from=-6,to=6,n=1000,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
abline(0,1,col="green")
abline(h=1,col="red")
abline(h=1,col="red")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(0,-1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(-1,col="red")
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(0,-1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments()
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(0,-1,col="red")
abline(0,1,col="green")
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(0,-1,0,1)
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(0,-1,0,1)
segments(-1,0,1,0)
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0)
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0)
segments(-1,0,1,0,col=2,lwd=5) #marque en rouge le segments [-1,1] sur l'axe des abs
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0)
segments(-1,0,1,0,col=1,lwd=5) #marque en rouge le segments [-1,1] sur l'axe des abs
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col=1,colors="red")
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0)
segments(-1,0,1,0,col=1)
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col=1)
abline(v=c(-1,1),col=2,lty=2) #verticales qui passent par les abscisses -1 et 1
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,lty=2)
abline(v=c(-1,1),lty=2) #verticales qui passent par les abscisses -1 et 1
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col=1,lty=2)
abline(v=c(-1,1),col=1,lty=2) #verticales qui passent par les abscisses -1 et 1
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col=2,lty=2)
abline(v=c(-1,1),col=2,lty=2)
help("segments")
curve(dnorm(x,0,1),from=-6,to=6,col=1)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col='red')
abline(v=c(-1,1),col='red')
help("segments")
curve(dnorm(x,0,1),from=-6,to=6)
curve(dnorm(x,0,0.5),from=-6,to=6,col=2,add=T)
curve(dnorm(x,0,2),from=-6,to=6,col=3,add=T)
curve(dnorm(x,3,1),from=-6,to=6,col=4,add=T)
abline(h=0) # ajoute l'axe des abscisses
abline(v=0) # ajoute l'axe des ordonnées
segments(-1,0,1,0,col='red')
abline(v=c(-1,1),col='red')
mu=0
sigma=1
curve(pnorm(x,2,3),from=-2,to=4)
mu=0
sigma=1
curve(p=dnorm(x,2,3),from=-2,to=4)
mu=0
sigma=1
curve(dnorm(x,2,3),from=-2,to=4)
mu=0
sigma=1
curve(dnorm(x,0,1),from=-2,to=4)
mu<-0
sig<-1
curve(pnorm(x,mu,sig),ylim=c(0,1),xlim=c(-3,3),from=mu-3*sig,to=mu+3*sig,n=100)
curve(dnorm(x,mu,sig),ylim=c(0,1),from=mu-3*sig,to=mu+3*sig,n=100,col="green",add=T)
mu<-0
sig<-1
curve(pnorm(x,mu,sig),ylim=c(0,1),xlim=c(-3,3),from=mu-3*sig,to=mu+3*sig,n=100)
curve(pnorm(x,0,1))
curve(pnorm(x,0,1),ylim=c(0,1),xlim=c(-3,3),from=2-3,to=2+3)
curve(pnorm(x,0,1),ylim=c(0,1),xlim=c(-3,3),from=2-3,to=2+3,n=1000)
curve(pnorm(x,0,1),ylim=c(0,-2),xlim=c(0,4),from=2-3,to=2+3)
curve(pnorm(x,0,1),ylim=c(0,1),xlim=c(-3,3),from=2-3,to=2+3)
