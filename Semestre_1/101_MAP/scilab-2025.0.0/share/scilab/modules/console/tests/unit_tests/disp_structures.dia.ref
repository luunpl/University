// =============================================================================
// Scilab ( https://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2019, 2020 - Samuel GOUGEON
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// Unitary tests of default display of scalar (nested) structures
// =============================================================================
// <-- CLI SHELL MODE -->
// <-- ENGLISH IMPOSED -->
oldDepth = xmlGetValues("//general/body/environment","container_disp_max_depth");
xmlSetValues("//general/body/environment", ["container_disp_max_depth"; "3"]);
// ----------------------------------------------------------------
clear s
s.f = [%i/%s, %s/(1-%s), 1/(1-%s)^2];
s.c = {1 3 ; "abc" %z};
s.ec = {};
s.b = rand(1,5)<0.5;
s.iL = $-4:2:$;
s.fun = linspace;
s.L = list(rand(2,3),{},(1-%z)^3,,%pi, %t, "abcd");
//s.lib = corelib;
s.tlist = tlist(["myTlist" "bool" "int" "num" "txt" "list"],..
          rand(3,4,2)<0.5, int8((rand(3,5)-0.5)*200), ..
          grand(3,4,"uin",-100,100), ["This" "is" "a" "test"], list(%pi,"number"));
s.mlist = mlist(["myMlist" "spb" "fun" "pol" "txt"],..
           sparse(rand(3,4)<0.5), cosd, (1-%z).^(0:4),["Scilab" "6.1"]);
s.estruct = struct();
s.withVoid = struct("num",%pi,"v",,"t","text");
s.struct = struct("a",rand(1,3),"L",list(%e,,"ABC"),"c",{{"GHI",1234}});
s
 s = [struct] with fields:
  f: [1x3 rational]
  c = {1,3;"abc",%z}
  ec = {}
  b = [%t,%f,%t,%t,%f]
  iL: implicitlist
  fun: function
  L: (7-elements list)
      (1): [2x3 double]
      (2) = {}
      (3) = 1-3*%z+3*%z^2-%z^3
      (4): void
      (5) = 3.1415927
      (6) = %t
      (7) = "abcd"
  tlist: (myTlist tlist) with fields:
      bool: [3x4x2 boolean]
      int: [3x5 int8]
      num: [3x4 double]
      txt = ["This","is","a","test"]
      list: (2-elements list)
          (1) = 3.1415927
          (2) = "number"
  mlist: (myMlist mlist) with fields:
      spb: [3x4 boolean sparse]
      fun: function
      pol: [1x5 polynomial]
      txt = ["Scilab","6.1"]
  estruct: [0x0 struct] with no field
  withVoid: [struct] with fields:
      num = 3.1415927
      v: void
      t = "text"
  struct: [struct] with fields:
      a = [0.9488184,0.3435337,0.3760119]
      L: (3-elements list)
          (1) = 2.7182818
          (2): void
          (3) = "ABC"
      c = {"GHI",1234}
// ----------------------------------------------------------------
clear s
s.root = "Hello 0";
s.L = list(2,"bonjour", list(%i, list(%z,3)));
s.t.a = "Level 1";
s.t.r = %pi;
s.t.tl = tlist(["myTlist" "a" "b" "c"], rand(2,3), %t, list("abc", 123));
s.t.b.a = "Level 2";
s.t.b.r = %e;
s.t.L2 = list("Hello", list(1-%z+%z^2, list(-4,%t)));
s.t.b.s.a = "Level 3";
s.t.b.s.p = (1-%z)^3;
xmlSetValues("//general/body/environment", ["container_disp_max_depth";"0"]);
s
 s = [struct] with fields:
  root = "Hello 0"
  L: (3-elements list)
  t: [struct]
xmlSetValues("//general/body/environment", ["container_disp_max_depth";"1"]);
s
 s = [struct] with fields:
  root = "Hello 0"
  L: (3-elements list)
      (1) = 2
      (2) = "bonjour"
      (3): (2-elements list)
  t: [struct] with fields:
      a = "Level 1"
      r = 3.1415927
      tl: (myTlist tlist)
      b: [struct]
      L2: (2-elements list)
xmlSetValues("//general/body/environment", ["container_disp_max_depth";"2"]);
s
 s = [struct] with fields:
  root = "Hello 0"
  L: (3-elements list)
      (1) = 2
      (2) = "bonjour"
      (3): (2-elements list)
          (1) = %i
          (2): (2-elements list)
  t: [struct] with fields:
      a = "Level 1"
      r = 3.1415927
      tl: (myTlist tlist) with fields:
          a: [2x3 double]
          b = %t
          c: (2-elements list)
      b: [struct] with fields:
          a = "Level 2"
          r = 2.7182818
          s: [struct]
      L2: (2-elements list)
          (1) = "Hello"
          (2): (2-elements list)
xmlSetValues("//general/body/environment", ["container_disp_max_depth";"3"]);
s
 s = [struct] with fields:
  root = "Hello 0"
  L: (3-elements list)
      (1) = 2
      (2) = "bonjour"
      (3): (2-elements list)
          (1) = %i
          (2): (2-elements list)
              (1) = %z
              (2) = 3
  t: [struct] with fields:
      a = "Level 1"
      r = 3.1415927
      tl: (myTlist tlist) with fields:
          a: [2x3 double]
          b = %t
          c: (2-elements list)
              (1) = "abc"
              (2) = 123
      b: [struct] with fields:
          a = "Level 2"
          r = 2.7182818
          s: [struct] with fields:
              a = "Level 3"
              p = 1-3*%z+3*%z^2-%z^3
      L2: (2-elements list)
          (1) = "Hello"
          (2): (2-elements list)
              (1) = 1-%z+%z^2
              (2): (2-elements list)
// ----------------------------------------------------------------
xmlSetValues("//general/body/environment", ["container_disp_max_depth"; oldDepth]);
